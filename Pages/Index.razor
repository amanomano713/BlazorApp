@page "/"
@using Microsoft.JSInterop;
@inject AuthenticationStateProvider authenticationStateProvider
@inject ILocalStorageService _localStorageService
@inject NavigationManager navigationManager
@inject IUserDataQueries UserDataQueries

<div class="panel-bod">
    <h2><i class="icon-edit-sign teal"></i> HOME</h2>
    <p>
        <strong style="color:black;font-size:medium">Crea una cuenta para administrar todo lo que haces con ClipOne, desde tus preferencias de compra hasta tu actividad en ClipOne</strong>
    </p>
    <hr>
</div>
<TempleateUser></TempleateUser>
<div class="row">
    <div class="col-md-4">
        <fieldset disabled>
            <div class="form-group" style="margin-top:10px">
                <strong style="color:black;font-size:x-large">Disponible #</strong>
                <input type="text" class="form-input" id="available" @bind-value="@available" />
            </div>
        </fieldset>
    </div>
    <div class="col-md-4">
        <fieldset disabled>
            <div class="form-group" style="margin-top:10px">
                <strong style="color:black;font-size:x-large">Paquetes #</strong>
                <input type="text" class="form-input" id="packages" @bind-value="@packages" />
            </div>
        </fieldset>
    </div>
    <div class="row">
        <div class="col-md-4">
            <fieldset disabled>
                <div class="form-group" style="margin-top:10px">
                    <strong style="color:black;font-size:x-large">Wallet BTC #</strong>
                    <input type="text" class="form-input" id="wallet" @bind-value="@wallet" />
                </div>
            </fieldset>
        </div>
        <div class="col-md-4">
            <fieldset disabled>
                <div class="form-group" style="margin-top:10px">
                    <strong style="color:black;font-size:x-large">Código #</strong>
                    <input type="text" class="form-input" id="codigo" @bind-value="@codigo" />
                </div>
            </fieldset>
        </div>
    </div>
</div>
@code {
    
    private string _userKey = "key";
    private IJSRuntime _jsRuntime;
    private int available = 1000;
    private int packages = 1000;
    private string? wallet ;
    private string? codigo ;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        var emailStorage = await _localStorageService.GetItem<String>(_userKey);

        if (firstRender)
        {

            if (string.IsNullOrEmpty(emailStorage))
            {
                var state = await authenticationStateProvider.GetAuthenticationStateAsync();
                if (!state.User.Identity.IsAuthenticated)
                {
                    navigationManager.NavigateTo("/account/signin?returnUrl=" + System.Net.WebUtility.UrlEncode(new Uri(navigationManager.Uri).PathAndQuery));
                }
            }
            else
            {
                UserDTO userData = new UserDTO();
                var UserData = await UserDataQueries.GetUserDataAsync(emailStorage);
                if (UserData != null)
                {
                    codigo = UserData.Id;
                    wallet = UserData.wallet.Trim();
                }
            }

            StateHasChanged();
        }
    }
}