@page "/soporte"
@inject AuthenticationStateProvider authenticationStateProvider
@inject NavigationManager navigationManager
@inject ILocalStorageService _localStorageService
@using Blazorise
<body>
    <div class="welcome"></div>
<div class="panel-body">
    <Blazorise.Container Breakpoint="Breakpoint.Desktop">
        <Blazorise.Alert Color="Color.Primary" Visible="true">
            <h3><i class="icon-edit-sign teal"></i> SOPORTE</h3>
            <p>
                <strong style="color:black;font-size:medium">Crea una cuenta para administrar todo lo que haces con ClipOne, desde tus preferencias de compra hasta tu actividad en ClipOne</strong>
            </p>
        </Blazorise.Alert>
    </Blazorise.Container>
    <hr>
</div>
</body>

@code {
    private string? email;
    private string _userKey = "key";
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var emailStorage = await _localStorageService.GetItem<String>(_userKey);
            if (string.IsNullOrEmpty(emailStorage))
            {
                var state = await authenticationStateProvider.GetAuthenticationStateAsync();
                if (!state.User.Identity.IsAuthenticated)
                {
                    navigationManager.NavigateTo("/account/signin?returnUrl=" + System.Net.WebUtility.UrlEncode(new Uri(navigationManager.Uri).PathAndQuery));
                }
                else
                {
                    email = state.User.Identities.FirstOrDefault().Name;
                }
            }
            else
            {
                email = emailStorage;
            }
            StateHasChanged();
        }
    }
}