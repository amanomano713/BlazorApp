@page "/extrato"
@inject AuthenticationStateProvider authenticationStateProvider
@inject NavigationManager navigationManager
@inject ILocalStorageService _localStorageService
@inject IMovPackageDataQueries _movpackagedataqueries
@inject IUserDataQueries UserDataQueries
@using MatBlazor
<div class="panel-body">
    <h2><i class="icon-edit-sign teal"></i> ESTADO DE CUENTA</h2>
    <p>
        <strong style="color:black;font-size:medium">Crea una cuenta para administrar todo lo que haces con ClipOne, desde tus preferencias de compra hasta tu actividad en ClipOne</strong>
    </p>
    <hr>
</div>
<MatTable Items="@movPackages" class="mat-elevation-z5">
    <MatTableHeader>
        <th><strong>Paquete</strong></th>
        <th>Fecha</th>
        <th>Interes</th>
    </MatTableHeader>
    <MatTableRow>
        <td>@context.CodPackage</td>
         <td>@string.Format("{0:d}",@context.CreatedDate)</td>
        <td>@string.Format("${0:f2}", @context.Interes)</td>
    </MatTableRow>
</MatTable>

@code {

    private string? email;
    private string _userKey = "key";
    public IEnumerable<MovPackage> movPackages;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var emailStorage = await _localStorageService.GetItem<String>(_userKey);
            if (string.IsNullOrEmpty(emailStorage))
            {
                var state = await authenticationStateProvider.GetAuthenticationStateAsync();
                if (!state.User.Identity.IsAuthenticated)
                {
                    navigationManager.NavigateTo("/account/signin?returnUrl=" + System.Net.WebUtility.UrlEncode(new Uri(navigationManager.Uri).PathAndQuery));
                }
                else
                {
                    email = state.User.Identities.FirstOrDefault().Name;
                }
            }
            else
            {
                UserDTO userData = new UserDTO();
                var UserData = await UserDataQueries.GetUserDataAsync(emailStorage);
                if (UserData != null)
                {
                    movPackages = await _movpackagedataqueries.GetAfiliadoDataAsync(UserData.Id);
                }
            }
            StateHasChanged();
        }
    }
}
